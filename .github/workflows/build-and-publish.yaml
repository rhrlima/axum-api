name: Build & Publish

on: [push, pull_request]

jobs:
  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest

    # run on PUSH and MAIN
    if: github.event_name == 'push' || github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Lint
      run: echo "Linting code"

    - name: Setup Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: "1.70.0"

    - name: Build Rust application
      run: cargo build --release

    - name: Light Tests
      run: cargo test --release

  heavy_tests:
    name: Heavy Tests
    runs-on: ubuntu-latest

    # run on PRs and MAIN
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: "1.70.0"
    - name: Heavy Tests
      run: cargo test --release

  docker_build_and_publish:
    name: Docker Build & Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    # run on PUSH and MAIN
    if: github.event_name == 'push' || github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker Image
      run: docker build -t docker_image .

    - name: Login to GitHub Container Registry
      # runs only in main
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Deploy Tag
      # runs only in main
      if: github.ref == 'refs/heads/main'
      run: |
        DEPLOY_TAG=v$(git log -1 --format="%at" | xargs -I{} date -d @{} +%Y.%m.%d-%H.%M.%S)

        git tag ${DEPLOY_TAG}
        git push --tags

    - name: Build & Push Docker image
      # runs only in main
      if: github.ref == 'refs/heads/main'
      run: |
        DEPLOY_TAG=$(git describe --tags --abbrev=0)
        IMAGE_NAME="${{ vars.REGISTRY_DOMAIN }}/${ GITHUB_REPOSITORY }"

        docker tag docker_image:latest ${IMAGE_NAME}:latest
        docker tag docker_image:latest ${IMAGE_NAME}:${DEPLOY_TAG}

        docker push ${IMAGE_NAME}:latest
        docker push ${IMAGE_NAME}:${DEPLOY_TAG}

  dev_deploy:
    name: Dev Deploy
    needs: docker_build_and_publish
    runs-on: ubuntu-latest

    # run on MAIN
    if: github.ref == 'refs/heads/main'

    env:
      DEPLOY_REPO_NAME: rhrlima/app-manifests
      MANIFEST_PATH: dev/axum-api/deployment.yaml

    steps:
    - name: Get Deploy Tag
      uses: actions/download-artifact@v4
      with:
        name: deploy_tag
        path: deploys/${{ github.run_id }}

    - name: Trigger Deploy
      run: |
        IMAGE_NAME="${{ vars.REGISTRY_DOMAIN }}/${ vars.REGISTRY_NAME }"
        IMAGE_TAG=$(git describe --tags --abbrev=0)

        curl -X POST https://api.github.com/repos/${DEPLOY_REPO_NAME}/dispatches \
        -H 'Accept: application/vnd.github.everest-preview+json' \
        -u ${{ secrets.ACTIONS_KEY }} \
        --data '{
          "event_type": "Automated Deploy",
          "client_payload": {
            "image_tag": "'"$IMAGE_TAG"'",
            "image_name": "'"$IMAGE_NAME"'",
            "manifest_path": "'"$MANIFEST_PATH"'"
          }}'
